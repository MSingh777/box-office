{"version":3,"sources":["Components/styled.js","Components/actor/ActorCard.Styled.js","Components/actor/ActorCard.js","images/NotFound.png","Components/actor/ActorGrid.js","Components/Navs.styled.js","Components/Navs.js","Components/Title.styled.js","Components/Title.js","Components/MainPageLayout.js","Components/show/ShowCard.Styled.js","Components/show/ShowCard.js","misc/config.js","misc/custom-hooks.js","Components/show/ShowGrid.js","Pages/Home.styled.js","Pages/Home.js","Components/show/Cast.styled.js","Components/show/Cast.js","Components/show/Detailed.styled.js","Components/show/Details.js","Components/show/Seasons.styled.js","Components/show/Seasons.js","Components/show/ShowMainData.styled.js","Components/show/ShowMainData.js","Pages/Show.styled.js","Pages/Show.js","Pages/Starred.js","App.js","reportWebVitals.js","index.js"],"names":["FlexGrid","styled","div","SearchCard","Star","props","active","StyledActorCard","ActorCard","image","name","gender","country","birthday","deathday","className","src","alt","ActorGrid","data","map","person","medium","IMAGE_NOT_FOUND","id","NavList","ul","LinkStyled","Link","theme","mainColors","gray","blue","LINKS","to","text","Navs","location","useLocation","item","pathname","TitleWrapper","dark","Title","title","subtitle","MainPageLayout","children","StyledShowCard","ShowCard","summary","onStarClick","isStarred","summaryAsText","split","slice","join","replace","type","onClick","API_BASE_URL","apiGet","queryString","a","fetch","then","r","json","response","showsReducer","prevState","action","showId","filter","usePersistedReducer","reducer","initialState","key","useReducer","initial","persisted","localStorage","getItem","JSON","parse","state","dispatch","useEffect","setItem","stringify","useShows","isLoading","error","show","ShowGrid","starredShows","dispatchStarred","includes","SearchInput","input","RadioInputWrapper","SearchButtonWrapper","Home","useState","sessionStorage","setInput","newState","useLastQuery","results","setResults","searchOption","setSearchOption","isShowsSearch","onSearch","result","onRadioChange","ev","target","value","placeholder","onChange","onKeyDown","keyCode","htmlFor","checked","length","CastList","Cast","cast","character","voice","IMG_PLACEHOLDER","DetailsWrapper","Details","status","premiered","network","SeasonsWrapper","SeasonList","Seasons","seasons","reduce","acc","episodeOrder","number","premieredDate","endDate","MainDataWrapper","Headline","TagList","ShowMainData","rating","tags","original","average","dangerouslySetInnerHTML","__html","tag","i","ShowPageWrapper","InfoBlock","Show","isMounted","setTimeout","catch","err","message","useShow","useParams","genres","_embedded","Starred","starred","shows","setShows","setIsLoading","setError","promises","Promise","all","apiData","console","log","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5993e7cc.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\n export const FlexGrid = styled.div `\r\n display: flex;\r\n justify-content: center;\r\n flex-wrap: wrap;\r\n `;\r\nexport const SearchCard = styled.div`\r\n    width:300px;\r\n    height: 100%;\r\n    margin: 0 15px 40px;\r\n\r\n    .img-wrapper{\r\n        width: 300px;\r\n        border-radius: 40px;\r\n        height: 420px;\r\n        overflow: hidden;\r\n        border: 1px solid #ddd;\r\n\r\n        img{\r\n            object-fit: cover;\r\n            height: 100%;\r\n            width: 100%;\r\n        }\r\n    }\r\n    h1{\r\n        margin: 10px 0;\r\n        font-size: 21px;\r\n    }\r\n    p{\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nexport const Star = styled.div `\r\ndisplay: inline-block;\r\nwidth: 18px;\r\nheight: 18px;\r\nbackground-color: ${(props)=> (props.active ? ' #ffc806' : '#ddd')\r\n};\r\nclip-path: polygon(\r\n    50% 0%,\r\n    61% 35%,\r\n    98% 35%,\r\n    68% 57%,\r\n    79% 91%,\r\n    50% 70%,\r\n    21% 91%,\r\n    32% 57%,\r\n    2% 35%,\r\n    39% 35%\r\n);\r\n`;","import styled from \"styled-components\";\r\n\r\nimport { SearchCard } from \"../styled\";\r\n\r\nexport const StyledActorCard = styled(SearchCard) `\r\n.deathday{\r\n    margin: 0;\r\n    margin-top: 15px;\r\n    font-size: bold;\r\n}\r\n`;","import React from 'react'\r\n\r\nimport { StyledActorCard } from './ActorCard.Styled'\r\n\r\nconst ActorCard = ({image, name, gender, country, birthday, deathday}) => {\r\n    return (\r\n        <StyledActorCard >\r\n            <div className=\"img-wrapper\">\r\n            <img src = {image} alt=\"actor\" />\r\n            </div>\r\n            <h1>\r\n                {name} { gender ? `(${gender})` : null }\r\n            </h1>\r\n            <p>\r\n                {country ? `Comes from ${country}` : 'No country known'}\r\n            </p>\r\n            {birthday ? <p> Born {birthday} </p> : null }\r\n            <p className=\"deathday\"> {deathday ? `Died ${deathday}` : 'Alive' }</p>\r\n        </StyledActorCard>\r\n    )\r\n}\r\n\r\nexport default ActorCard;\r\n","export default __webpack_public_path__ + \"static/media/NotFound.d11b58e2.png\";","import React from 'react'\r\nimport ActorCard from './ActorCard'\r\nimport IMAGE_NOT_FOUND from '../../images/NotFound.png'\r\n//import { FlexGrid } from '../styled'\r\n\r\nconst ActorGrid = ({ data }) => {\r\n    return (\r\n        <div>\r\n            {data.map(({ person }) => (\r\n                <ActorCard \r\n                key ={person.id}\r\n                name={person.name}\r\n                country={person.country ? person.country.name : null}\r\n                birthday = {person.birthday}\r\n                deathday= {person.deathday}\r\n                gender={person.gender}\r\n                image={person.image ? person.image.medium : IMAGE_NOT_FOUND} \r\n                />\r\n            )) }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActorGrid\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const NavList = styled.ul `\r\ndisplay: flex;\r\njustify-content: center;\r\nlist-style: none;\r\nmargin: 0 0 30px;\r\npadding: 0;\r\n`;\r\n\r\nexport const LinkStyled = styled(Link) `\r\nmargin: 0 10px;\r\npadding: 3px 15px;\r\nposition: relative;\r\ntext-decoration: none;\r\ncolor: ${({theme}) => theme.mainColors.gray};\r\n&.active {\r\n    color: ${({theme}) => theme.mainColors.blue};\r\n    &:after{\r\n        content: '';\r\n        position: absolute;\r\n        display: block;\r\n        height: 2px;\r\n        left: 0%;\r\n        bottom: 0;\r\n        background-color: ${({theme}) => theme.mainColors.blue};\r\n        animation: slide-in 0.3s ease-in forwards;\r\n        @keyframes slide-in {\r\n            from {\r\n                left: 50%;\r\n                width: 0;\r\n            }\r\n            to {\r\n                left: 0%;\r\n                width: 100%;\r\n            }\r\n        };\r\n    }\r\n}\r\n`;","import React from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport { LinkStyled, NavList } from './Navs.styled'\r\n\r\nconst LINKS =[\r\n    {to :'/', text : 'Home'},\r\n    {to : '/starred', text : 'Starred'}\r\n]\r\nexport const Navs = () => {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <div>\r\n            <NavList>\r\n                {LINKS.map(item=> \r\n                <li key={item.to}>\r\n                <LinkStyled to = {item.to} className= {item.to === location.pathname ? 'active ' : '' }>{item.text}</LinkStyled>\r\n                </li>)}\r\n                \r\n            </NavList>\r\n        </div>\r\n    )\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const TitleWrapper = styled.div `\r\ntext-align: center;\r\nmargin: 0 0 40px;\r\n\r\nh1 {\r\n    color: ${({theme}) => theme.mainColors.blue};\r\n    letter-spacing: 10px;\r\n    text-transform: uppercase;\r\n    margin: 0 0 10px;\r\n}\r\n\r\np {\r\n    color: ${({theme}) => theme.mainColors.dark};\r\n    margin: 0;\r\n}\r\n`;","import React from 'react'\r\nimport { TitleWrapper } from './Title.styled'\r\n\r\n export const Title = ({title, subtitle}) => {\r\n    return (\r\n        <TitleWrapper>\r\n            <h1>\r\n                {title}\r\n            </h1>\r\n            <p>{subtitle}</p>\r\n        </TitleWrapper>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { Navs } from './Navs'\r\nimport { Title } from './Title'\r\n\r\nexport const MainPageLayout = ({children}) => {\r\n    return (\r\n        <div>\r\n            <Title title=\"Box Office\" subtitle=\"Are You looking for a Movie or an Actor?\"/>\r\n      <Navs />\r\n        {children}\r\n        </div>\r\n    )\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nimport { SearchCard } from \"../styled\";\r\n\r\nexport const StyledShowCard = styled(SearchCard)`\r\n\r\n.btns{\r\n    margin-top: 15px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    a{\r\n        text-decoration-color: #000 ;\r\n        color: #000;\r\n        &:hover {\r\n            text-decoration-color: blue;\r\n            color: blue;\r\n        }\r\n    }\r\n    button {\r\n        outline: none;\r\n        border: 1px solid #8e8e8e;\r\n        border-radius: 15px;\r\n        padding: 5px 20px;\r\n        background-color: #fff;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        &:hover{\r\n            cursor: pointer;\r\n        }\r\n    }\r\n}\r\n`;\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Star } from '../styled';\r\nimport { StyledShowCard } from './ShowCard.Styled';\r\n\r\n\r\n\r\nconst ShowCard = ({id ,image, name, summary, onStarClick, isStarred }) => {\r\n    const summaryAsText = summary\r\n    ? `${summary.split(' ').slice(0,10).join(' ').replace(/<.+?>/g,'')}...`\r\n    : 'No Description';\r\n\r\n    return (\r\n        <StyledShowCard> \r\n            <div className=\"img-wrapper\">\r\n                <img src ={image} alt=\"show\" />\r\n            </div>\r\n            <h1>{name}</h1>\r\n            <p> {summaryAsText} </p>\r\n            <div className =\"btns\">\r\n                <Link to ={`/show/${id}`}>Read more </Link>\r\n                <button type =\"button\" onClick ={onStarClick} >\r\n                     <Star  active={isStarred} /> \r\n                     </button>\r\n            </div>\r\n\r\n            </StyledShowCard>\r\n    )\r\n}\r\n\r\nexport default ShowCard\r\n","const API_BASE_URL = 'https://api.tvmaze.com';\r\n\r\n\r\nexport async function apiGet (queryString) {\r\n    const response = await fetch(`${API_BASE_URL}${queryString}`).then(r=>r.json());\r\n    \r\n   \r\n    return response;\r\n\r\n }\r\n","import { useReducer, useEffect, useState } from 'react'\r\nimport { apiGet } from './config';\r\n\r\n\r\nfunction showsReducer(prevState, action){\r\n    switch(action.type){\r\n\r\n    case 'ADD': {\r\n        return[...prevState, action.showId]\r\n    }\r\n    case 'REMOVE': {\r\n        return prevState.filter( showId => showId !== action.showId );\r\n    }\r\n\r\n    default: \r\n    return prevState;\r\n    }\r\n}\r\n\r\nfunction usePersistedReducer ( reducer, initialState, key ) {\r\n    const [state, dispatch] = useReducer(reducer, initialState, (initial) => {\r\n        const persisted = localStorage.getItem(key);\r\n\r\n        return persisted ? JSON.parse(persisted) : initial;\r\n    })\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(key, JSON.stringify(state))\r\n    },[state, key])\r\n\r\n    return [state, dispatch];\r\n}\r\n\r\nexport function useShows(key = 'shows'){\r\n    return usePersistedReducer(showsReducer , [], key)\r\n}\r\n\r\nexport function useLastQuery (key = 'lastQuery') {\r\n    const [input, setInput] = useState(() => {\r\n        const persisted = sessionStorage.getItem(key);\r\n\r\n        return persisted ? JSON.parse(persisted) : \"\";\r\n    })\r\n    const setPersisitedInput = (newState) => {\r\n        setInput(newState);\r\n        sessionStorage.setItem(key, JSON.stringify(newState))\r\n    }\r\n\r\n    return [input, setPersisitedInput]\r\n}\r\nconst reducer = (prevState, action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_SUCCESS':{\r\n            return{isLoading: false,error: null, show: action.show}\r\n        }\r\n        case 'FETCH_FAILED':{\r\n            return{...prevState, isLoading: false, error: action.error}\r\n        }\r\n        default:\r\n            return prevState;\r\n    }\r\n}\r\n\r\nexport function useShow(showId) {\r\n    const [state, dispatch] = useReducer(reducer, {\r\n            show: null,\r\n            isLoading: true,\r\n            error: null\r\n        })\r\n    \r\n    useEffect(()=>{\r\n\r\n        let isMounted =true;\r\n\r\n        apiGet(`/shows/${showId}?embed[]=seasons&embed[]=cast`)\r\n        .then(results => {\r\n            setTimeout(()=>{\r\n                if(isMounted){\r\n                    dispatch({type: 'FETCH_SUCCESS', show: results})\r\n                }\r\n            });   \r\n        })\r\n        .catch(err=>{\r\n            if(isMounted){\r\n                dispatch({type: 'FETCH_FAILED ', error: err.message})\r\n            }\r\n        });\r\n        return()=>{\r\n            isMounted=false;\r\n        }\r\n    }, [showId] )\r\n\r\n    return state;\r\n}","import React from 'react'\r\nimport ShowCard from './ShowCard'\r\nimport { FlexGrid } from '../styled'\r\nimport IMAGE_NOT_FOUND from '../../images/NotFound.png'\r\nimport { useShows } from '../../misc/custom-hooks'\r\n\r\n\r\nconst ShowGrid = ({ data }) => {\r\n\r\n    const [starredShows, dispatchStarred] = useShows()\r\n\r\n    return (\r\n        <FlexGrid>\r\n            {\r\n                data.map(({show})=>{\r\n                \r\n                    const isStarred = starredShows.includes(show.id);\r\n                    const onStarClick = () => {\r\n                        if(isStarred){\r\n                            dispatchStarred({type: 'REMOVE', showId: show.id })\r\n                        } else {\r\n                            dispatchStarred({type: 'ADD', showId: show.id })\r\n                        }\r\n\r\n                    }\r\n\r\n                return(\r\n                <ShowCard \r\n                key={show.id}\r\n                id ={show.id} \r\n                name={show.name} \r\n                image={show.image ? show.image.medium : IMAGE_NOT_FOUND} \r\n                summary = {show.summary}\r\n                onStarClick={onStarClick} \r\n                isStarred={isStarred}\r\n                />\r\n                )})\r\n            }\r\n        </FlexGrid>\r\n    )\r\n}\r\n\r\nexport default ShowGrid\r\n","import styled from \"styled-components\";\r\n\r\nexport const SearchInput = styled.input `\r\ndisplay: block;\r\nfont-family: 'Roboto' , sans-serif;\r\nwidth: 200px;\r\nmargin: auto;\r\noutline: none;\r\npadding: 13px 15px;\r\nborder: 1px solid #dbdbdb;\r\nbox-shadow: 0px 0px 10px 0px rgba(219, 219, 219, 0.5);\r\nfont-size: 14px;\r\nborder-radius: 12px;\r\ncolor: #8d8d8d;\r\n\r\n&::placeholder {\r\n    font-weight: 300;\r\n    color: #8d8d8d;\r\n}\r\n`;\r\n\r\nexport const RadioInputWrapper = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\nmargin: 20px 0;\r\n\r\ndiv {\r\n    margin: 0 15px;\r\n}\r\n`;\r\n\r\nexport const SearchButtonWrapper = styled.div `\r\ntext-align: center;\r\nmargin-bottom: 35px;\r\n\r\nbutton {\r\n    color: #fff;\r\n    background-color: ${({theme}) => theme.mainColors.blue};\r\n    margin: auto;\r\n    padding: 10px 50px;\r\n    font-size: 15px;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: 12px;\r\n    &:hover {\r\n        cursor: pointer;\r\n    }\r\n}\r\n`;","import React, { useState  } from 'react'\r\nimport ActorGrid from '../Components/actor/ActorGrid';\r\nimport { MainPageLayout } from '../Components/MainPageLayout'\r\nimport ShowGrid from '../Components/show/ShowGrid';\r\nimport { apiGet } from '../misc/config';\r\nimport { useLastQuery } from '../misc/custom-hooks';\r\nimport { RadioInputWrapper, SearchButtonWrapper, SearchInput } from './Home.styled';\r\n\r\n\r\nexport const Home = () => {\r\n    const [input , setInput]=useLastQuery();\r\n    const[results, setResults]=useState(null)\r\n    const[searchOption, setSearchOption]=useState('shows')\r\n    const isShowsSearch = searchOption==='shows'\r\n\r\n   \r\n\r\n    const onInputChange =(ev)=>{\r\n        setInput(ev.target.value);\r\n    };\r\n    const  onSearch =() =>{\r\n        apiGet (`/search/${searchOption}?q=${input}`).then(result => {\r\n            setResults(result)\r\n    })  \r\n    };\r\n    const onKeyDown = (ev) =>{\r\n        if (ev.keyCode===13){\r\n            onSearch()\r\n        }\r\n        \r\n    }\r\n    const onRadioChange=(ev) => {\r\n        setSearchOption(ev.target.value)\r\n    }\r\n    \r\n    const renderResults = () =>{\r\n        if(results && results.length ===0){\r\n            return <div>No Results</div>\r\n        }\r\n        if(results && results.length >0){\r\n           return results[0].show ?(\r\n            <ShowGrid data={results}/>\r\n            ):(\r\n            <ActorGrid data={results}/>\r\n            )\r\n           \r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n    return (\r\n        <MainPageLayout>\r\n        \r\n            <SearchInput type=\"text\" placeholder=\"Search for Something\" onChange={onInputChange} onKeyDown={onKeyDown} value={input} />\r\n            <RadioInputWrapper>\r\n                <div>\r\n                <label htmlFor=\"shows-search\">\r\n                    Shows\r\n                    <input id=\"shows-search\" type=\"radio\" value=\"shows\" onChange={onRadioChange} checked={isShowsSearch}/>\r\n                </label>\r\n                </div>\r\n                <div>\r\n                <label htmlFor=\"actors-search\">\r\n                    Actors\r\n                    <input id =\"actors-search\" type=\"radio\" value=\"people\" onChange={onRadioChange} checked={!isShowsSearch}/>\r\n                </label>\r\n                </div>\r\n            </RadioInputWrapper>\r\n            <SearchButtonWrapper >\r\n            <button type=\"button\" onClick={onSearch} >Search</button>\r\n            </SearchButtonWrapper>\r\n            {renderResults()}\r\n        </MainPageLayout>\r\n    )\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const CastList = styled.div `\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\n\r\n.cast-item {\r\n    flex: 1 0 50%;\r\n    display: flex;\r\n    margin-bottom: 20px;\r\n    align-items: center;\r\n\r\n    @media only screen and (max-width: 768px){\r\n        flex: 1 0 100%;\r\n    }\r\n}\r\n\r\n.pic-wrapper {\r\n    width: 50px;\r\n    min-width: 50px;\r\n    height: 50px;\r\n    overflow: hidden;\r\n    border-radius: 50%;\r\n    img{\r\n        object-fit: cover;\r\n        width: 1005;\r\n        height: 100%;\r\n    }\r\n}\r\n\r\n.actor {\r\n    margin-left: 25px;\r\n\r\n    .bold{\r\n        font-weight: bold;\r\n    }\r\n}\r\n`;","import React from 'react'\r\nimport IMG_PLACEHOLDER from '../../images/NotFound.png'\r\nimport { CastList } from './Cast.styled';\r\n\r\nconst Cast = ( {cast }) => {\r\n    return (\r\n        <CastList>\r\n            {cast.map(({ person, character, voice } , key) => (\r\n                <div key = {key} className=\"cast-item\">\r\n                    <div className=\"pic-wrapper\">\r\n                        <img src= {person.image ? person.image.medium : IMG_PLACEHOLDER}\r\n                        alt =\"cast-person\" />\r\n                    </div>\r\n                    <div className=\"actor\">\r\n                        <span> \r\n                            <span className=\"bold\"> {person.name} </span> | {character.name} {voice ? '| Voice': ' '}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </CastList>\r\n    )\r\n}\r\n\r\nexport default Cast;\r\n","import styled from \"styled-components\";\r\n\r\nexport const DetailsWrapper = styled.div `\r\np{\r\n    margin: 5px 0;\r\n\r\n    span{\r\n        font-weight: bold;\r\n    }\r\n}\r\n`;","import React from 'react'\r\nimport { DetailsWrapper } from './Detailed.styled'\r\n\r\nconst Details = ({status, premiered, network}) => {\r\n    return (\r\n        <DetailsWrapper>\r\n            <p>\r\n                Status: <span> {status}</span>\r\n            </p>\r\n            <p>\r\n                Premiered {premiered} {network ? `on ${network.name}`: null}\r\n            </p>\r\n        </DetailsWrapper>\r\n    )\r\n}\r\n\r\nexport default Details\r\n","import styled from \"styled-components\";\r\n\r\nexport const SeasonsWrapper = styled.div `\r\np{\r\n    margin: 5px 0;\r\n}\r\nspan{\r\n    font-weight: 700;\r\n}\r\n`;\r\nexport const SeasonList = styled.div `\r\ndisplay: flex;\r\nflex-direction: column;\r\n\r\n.season-item {\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 10px 0;\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n    .left {\r\n        flex: 0 0 30%;\r\n        border-right: 1px solid #b0b0b0;\r\n        padding-right: 20px;\r\n    }\r\n    .right {\r\n        padding-left: 20px;\r\n        flex: 1;\r\n    }\r\n}\r\n`;","import React from 'react'\r\nimport { SeasonList, SeasonsWrapper } from './Seasons.styled'\r\n\r\nconst Seasons = ({ seasons } ) => {\r\n    return (\r\n        <SeasonsWrapper>\r\n            <p>\r\n                Seasons in total: <span> {seasons.length } </span>\r\n            </p>\r\n            <p>\r\n                Episides in total: {' '}\r\n                <span> \r\n                    {seasons.reduce((acc, seasons) => acc + seasons.episodeOrder, 0)}\r\n                </span>\r\n            </p>\r\n            <SeasonList>\r\n                {seasons.map(seasons => (\r\n                    <div key ={seasons.id} className =\"season-item\">\r\n                        <div className = \"left\">\r\n                            <p>\r\n                                Seasond {seasons.number}\r\n                            </p>\r\n                            <p>\r\n                                Episodes: <span>{seasons.episodeOrder}</span>\r\n                            </p>\r\n                            </div>\r\n                            <div className =\"right\">\r\n                                Aired :{' '}\r\n                                <span> {seasons.premieredDate} - {seasons.endDate} </span>\r\n                            </div>\r\n                        </div>\r\n                ))}\r\n            </SeasonList>\r\n        </SeasonsWrapper>\r\n    )\r\n}\r\n\r\nexport default Seasons\r\n","import styled from \"styled-components\";\r\n\r\nexport const MainDataWrapper = styled.div `\r\ndisplay: flex;\r\nmargin-bottom: 40px;\r\n\r\nimg{\r\n    min-width: 250px;\r\n    width: 300px;\r\n    max-height: 450px;\r\n    border: 1px solid 40px;\r\n    border-radius: 1.5;\r\n}\r\n.text-side{\r\n    margin-left: 20px;\r\n    .summary{\r\n        color: #5f5f5f;\r\n        line-height: 1.5;\r\n    }\r\n}\r\n@media only screen and (max-width: 768px){\r\n    flex-wrap: wrap;\r\n    img{\r\n        margin-bottom: 20px;\r\n        margin: auto;\r\n    }\r\n    .text-side{\r\n        margin-left: 0;\r\n        margin-top: 20px;\r\n    }\r\n}\r\n`;\r\nexport const Headline = styled.div `\r\ndisplay: flex;\r\nalign-items: center;\r\nflex-wrap: wrap;\r\n\r\nh1{\r\n    margin: 0;\r\n    border-right: 1px solid #ddd;\r\n    padding-right: 25px;\r\n    margin-right: 20px;\r\n}\r\ndiv{\r\n    display: flex;\r\n    align-items: center;\r\n    span{\r\n        margin-left: 10px;\r\n    }\r\n}\r\n`;\r\nexport const TagList = styled.div `\r\ndisplay: inline-flex;\r\nflex-wrap: wrap;\r\n\r\nspan{\r\n    margin: 6px;\r\n    margin-bottom: 0;\r\n    color: blue;\r\n    background-color: #d0c9ff;\r\n    padding: 3px 13px;\r\n    border-radius: 20px;\r\n    font-size: 14px;\r\n}\r\n`;\r\n","import React from 'react'\r\nimport IMG_PLACEHOLDER from '../../images/NotFound.png';\r\nimport { Star } from '../styled';\r\nimport { Headline, MainDataWrapper, TagList } from './ShowMainData.styled';\r\n\r\n\r\nconst ShowMainData = ({name, rating, summary, tags, image}) => {\r\n    return (\r\n        <MainDataWrapper>\r\n            <img src={image ? image.original : IMG_PLACEHOLDER } alt =\"show-cover\" />\r\n            <div className=\"text-side\" >\r\n                <Headline>\r\n                    <h1>{name}</h1>\r\n                    <div>\r\n                        <Star active />\r\n                        <span> {rating.average || 'N/A'} </span>\r\n                    </div>\r\n                </Headline>\r\n                <div className=\"summary\" dangerouslySetInnerHTML = {{__html: summary}} />\r\n               \r\n                <div>\r\n                    Tags:{' '}\r\n                    <TagList>\r\n                        {tags.map((tag ,i ) => (\r\n                            <span key ={i}>{tag}</span>\r\n                        )) }\r\n                    </TagList>\r\n                </div>\r\n            </div>\r\n        </MainDataWrapper> \r\n    )\r\n}\r\n\r\nexport default ShowMainData;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ShowPageWrapper = styled.div `\r\npadding: 0 20px;\r\n\r\n@media only screen and (min-width: 516px){\r\n    padding: 0 40px;\r\n}\r\n\r\n@media only screen and (min-width: 768px){\r\n    padding: 0 60px;\r\n}\r\n\r\n@media only screen and (min-width: 992px){\r\n    padding: 0 80px;\r\n}\r\n`;\r\n\r\nexport const InfoBlock = styled.div `\r\nmargin-bottom: 40px;\r\nh2{\r\n    margin: 0;\r\n    margin-bottom: 30px;\r\n    font-size: 22px;\r\n}\r\n`;"," import React from 'react'\r\nimport Cast from '../Components/show/Cast';\r\nimport Details from '../Components/show/Details'\r\nimport Seasons from '../Components/show/Seasons';\r\nimport ShowMainData from '../Components/show/ShowMainData'\r\nimport { useParams } from 'react-router-dom'\r\nimport { InfoBlock } from './Show.styled';\r\nimport { ShowPageWrapper } from './Show.styled';\r\nimport { useShow } from '../misc/custom-hooks';\r\n\r\n\r\n\r\nconst Show = () => {\r\n    const {id } = useParams();\r\n    \r\n    const {show, isLoading, error} = useShow(id)\r\n\r\n    if(isLoading){\r\n        return <div>\r\n            Data is being loaded\r\n        </div>\r\n    }\r\n    if(error){\r\n        return <div>\r\n            Error Occured: {error}\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <ShowPageWrapper>\r\n            <ShowMainData \r\n            image={show.image}\r\n            name={show.name}\r\n            rating={show.rating}\r\n            summary={show.summary}\r\n            tags={show.genres}  />\r\n            <InfoBlock>\r\n                <h2>Details</h2>\r\n                <Details status={show.status} network= {show.network} premiered={show.premiered} />\r\n            </InfoBlock>\r\n            <InfoBlock>\r\n                <h2>Seasons</h2>\r\n                <Seasons seasons={show._embedded.seasons} />\r\n            </InfoBlock>\r\n            <InfoBlock>\r\n                <h2>Cast</h2>\r\n                <Cast cast={show._embedded.cast} />\r\n            </InfoBlock>\r\n           \r\n        </ShowPageWrapper>\r\n    )\r\n};\r\n\r\nexport default Show;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { MainPageLayout } from '../Components/MainPageLayout'\r\nimport ShowGrid from '../Components/show/ShowGrid'\r\nimport { apiGet } from '../misc/config'\r\nimport { useShows } from '../misc/custom-hooks'\r\n\r\nexport const Starred = () => {\r\n\r\n    const [starred ] = useShows()\r\n\r\n    const [shows, setShows] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n\r\n        if(starred && starred.length > 0) {\r\n            \r\n            const promises = starred.map(showId => apiGet(`/shows/${ showId }`))\r\n            \r\n            Promise.all(promises)\r\n                .then(apiData => apiData.map(show => ({show})))\r\n                .then(results => {\r\n                console.log('results' , results)\r\n                setShows(results);\r\n                setIsLoading(false);\r\n            })\r\n            .catch(err => {\r\n                setError(err.message);\r\n                setIsLoading(false);\r\n           })\r\n\r\n        } else {\r\n            setIsLoading(false);\r\n            \r\n        }\r\n    }, [starred])\r\n        \r\n\r\n    return (\r\n        <MainPageLayout>\r\n            {isLoading && <div> Shows are still loading</div> }\r\n            {error && <div> Error Occured: {error} </div>}\r\n            {!isLoading && !shows && <div> No shows were added</div>}\r\n            {!isLoading && !error && shows && <ShowGrid data ={shows} /> }\r\n        </MainPageLayout>\r\n    )\r\n        }\r\n    \r\n","import React from \"react\"\nimport {Switch , Route } from 'react-router-dom'\nimport { ThemeProvider } from \"styled-components\";\nimport { Home } from \"./Pages/Home\";\nimport Show from \"./Pages/Show\";\nimport { Starred } from \"./Pages/Starred\";\n\nconst theme ={\n  mainColors : {\n    blue: '#2400ff',\n    gray: '#c6c6c6',\n    dark: '#353535',\n  },\n};\n\nfunction App() {\n  \n  return (\n  <ThemeProvider theme ={theme} >\n  <Switch>\n    <Route exact  path =\"/\">\n      <Home />\n    </Route>\n      \n    <Route exact path =\"/starred\">\n      <Starred />\n    </Route>\n\n     <Route exact path = \"/show/:id\">\n      <Show />\n    </Route> \n\n    <Route>\n      Page not Found.\n    </Route>\n\n  </Switch>\n  </ThemeProvider>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}